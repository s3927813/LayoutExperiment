/*use the root to inherit font or color palettes!
I chose this color palette because I always find myself gravitating towards sweet pastel 
candylike colors. I also pictured this grid in my head to be fast paced(how the top half 
alternates), dynamic, and playful, so I chose bright colors to accomodate that*/

:root{
    --col1: #DEC0F1;
    --col2: #4CB944;
    --col3: #F5EE9E;
    --col4: #7EC4CF;
    --col5: #52B2CF;
}


body {
    background-color: var(--col4);
}
/*using . and not # to target class/multiple elements*/

.container {  display: grid;
    /*grid template columns and row numbers from layoutit.io*/
    grid-template-columns: 8fr 0.1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 0.1fr 8fr;
    grid-template-rows: 0.1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 0.1fr;
    gap: 10px 10px;
    grid-auto-flow: row;
    justify-items: stretch;
    align-items: stretch;
  }

/*grid area layout: grid row start / column start / row end / column end;*/
  .box { 
    grid-area: 1 / 2 / 11 / 14; 
    border-radius: 5px;
    padding: 7px;
    background: var(--col1);
    background: radial-gradient(circle, var(--col1) 0%,var(--col4)55%, var(--col3) 100%);
}

  .a1 { 
    grid-area: 2 / 3 / 5 / 5; 
    border-radius: 5px;
    padding: 7px;
    background-color: var(--col2);
}
  
  .a2 { 
    grid-area: 3 / 5 / 6 / 7; 
    border-radius: 5px;
    padding: 7px;
    background-color: var(--col5);
}
  
  .a3 { 
    grid-area: 2 / 7 / 5 / 9; 
    border-radius: 5px;
    padding: 7px;
    background-color: var(--col4);
}
  
  .a4 { 
    grid-area: 3 / 9 / 6 / 11; 
    border-radius:5px;
    padding: 7px;
    background-color: var(--col1);
}
  
  .a5 { 
    grid-area: 2 / 11 / 5 / 13; 
    border-radius: 5px;
    padding: 7px;
    background-color: var(--col5);
}
  
  .a6 { 
    grid-area: 6 / 3 / 10 / 13;
    border-radius: 5px;
    padding: 7px;
    background-color: var(--col3);
}
  
  
  html, body , .container {
    height: 100%;
    margin: 0;
  }
  
  /* colors and presentation */
  
  .container * {
    border: solid 3px var(--col3);
    position: relative;
  }
  
  .container *:after {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    align-items: center;
    justify-content: center;
  }
  
  